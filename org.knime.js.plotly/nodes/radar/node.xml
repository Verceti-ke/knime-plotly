<?xml version="1.0" encoding="utf-8"?>
<js:knimeNode
	xmlns:js="http://knime.org/dynamicjsnode/v3.0"
	xmlns="http://knime.org/dynamicnode/v3.0"
	xmlns:n="http://knime.org/node/v2.12"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://knime.org/dynamicjsnode/v3.0 http://www.knime.org/node/dynamicJSNode_v3.0.xsd"
	jsNamespace="knimeRadarPlot" nodeID="plotly_radar_plot"
	afterID="org.knime.dynamic.js.v30.DynamicJSNodeFactory#Radar Plot (Plotly)"
	categoryPath="/labs/js-views/plotly" icon="../js.png" type="Visualizer">
	<name>Radar Plot (Plotly)</name>
	<shortDescription>A radar plot based on the Plotly.js library.</shortDescription>
	<fullDescription>
		<intro>
			<n:p>
				A radar plot based on the Plotly.js library. This radar plot
				displays
				each row in a data set as an individual line on a circular
				plot with
				each radii corresponding to an individual feature of that
				row.
				This plot only displayed numeric columns and is NOT currently
				compatible
				with other KNIME interactive views. It is also recommended
				that you
				choose to display 20 or fewer rows. This chart can be useful
				for visualizing relationships between groups within data, but it is
				recommended to consolidate your statistics before using this view,
				rather than displaying an entire data set. A recommended node to use
				in
				conjunction with this view would be the 'Statistics' node to
				provide useful
				numeric information about the data set and then the
				radar plot to
				visually inspect these relationships.
			</n:p>
			<n:p>
				The node supports custom CSS styling.
				You can simply put CSS
				rules into a single string and set it as a flow
				variable 'customCSS'
				in the node configuration dialog.
				Current KNIME classes are NOT YET
				supported, so class names will have to be
				deduced from the view
				itself. We are hoping to support standard
				KNIME
				classes in an upcoming
				release.
			</n:p>
			<n:p>
				Please note: the Plotly.js KNIME extension is currently in Labs. It
				is recommended that you handle missing values and normalize your
				data before using
				visualization nodes in this extension to improve
				performance.
				Please feel free to leave feedback and suggestions on
				our community
				forum
				<n:a href="https://forum.knime.com/">here</n:a>
				.
			</n:p>
		</intro>
		<tab name="Options">
			<description>
				General options for the KNIME Radar Plot with Plotly.
			</description>
			<options>
				<integerOption name="Maximum number of rows"
					id="maxRowsCust" label="Maximum number of rows" defaultValue="250"
					minValue="1" stepSize="1" configOnly="true">
					Maximum number of rows
					displayed. Calculated from top towards the bottom of the input
					table.
				</integerOption>
				<svgOption name="Image" id="svg" portIndex="0"
					label="Image" additionalWait="500" defaultWidth="800"
					defaultHeight="600" defaultFullscreen="true">
					Settings for SVG image
					generation.
				</svgOption>
				<columnFilterOption name="Included columns"
					id="columns" inPortIndex="0" label="Included columns"
					filterClasses="org.knime.core.data.IntValue org.knime.core.data.LongValue org.knime.core.data.DoubleValue"
					saveInView="true">
					Select the columns to be plotted as spokes on the radar
					plot.
				</columnFilterOption>
				<columnSelectorOption name="'Group-By' Column"
					id="groupByColumn" inPortIndex="0" label="'Group-By' Column"
					allowNoneColumn="true" optional="true" defaultColumn="none"
					filterClasses="org.knime.core.data.StringValue org.knime.core.data.NominalValue">
					If "Display Legend" is enabled, this column will be
					used to group different visual elements
					based on their membership in
					the chosen "Group-By" column in the legend. With the legend enabled
					and groups chosen, you can then toggle the visibility of visual
					elements by group through
					legend interactions.
				</columnSelectorOption>
				<checkBoxOption name="Report on missing values"
					id="reportMissing" label="Report on missing values"
					defaultValue="true">
					When enabled this will display a warning whenever there is a missing
					value
					present in the data and give a count on how many missing values
					exist in the data.
				</checkBoxOption>
				<radioButtonOption
					name="Missing values 
					handling" id="mValues"
					possibleValues="Skip&#160;rows&#160;with&#160;missing&#160;values 
					Leave&#160;missing&#160;values"
					label="Missing 
					values"
					defaultValue="Leave&#160;missing&#160;values" saveInView="true">The way in
					which this view tries to compensate for missing or invalid values.
					"Skip rows with missing values" will omit the entire row if a
					single cell is missing. This can
					affect multiple traces on the chart in some circumstances. "Leave
					missing" will leave a gap where
					the missing value exists and draw the chart anyways.
				</radioButtonOption>
			</options>
		</tab>
		<tab name="General Plot Options">
			<description>
				These options control the initial state of the view.
			</description>
			<options>
				<stringOption name="Title" id="title" label="Title"
					defaultValue="Radar Plot" optional="true" saveInView="true">
					The chart
					title.
				</stringOption>
				<stringOption name="Axis label" id="axisLabel"
					label="Axis label" defaultValue="" optional="true"
					saveInView="true">
					The label for the radial axis. If "Enable text editing"
					is enabled, this value can be changed in the view.
				</stringOption>
				<checkBoxOption name="Display legend" id="showLegend"
					label="Display legend" defaultValue="false" saveInView="true">
					When
					checked,
					the chart's legend is displayed.
				</checkBoxOption>
				<checkBoxOption name="Show warnings in view"
					id="showWarnings" label="Show 
					warnings in view"
					defaultValue="true" saveInView="true"> When checked, the
					any warnings will be displayed in the view.
				</checkBoxOption>
				<checkBoxOption name="Override colors"
					id="overrideColors" label="Override colors" defaultValue="false">
					When
					checked, the colors provided by the data table will be
					ignored and
					the color chosen below for "Data color" will be
					applied to the plot. If there are no colors provided with the
					data, the
					node will use the "Data color" by default, even if
					this option has
					not been selected.
				</checkBoxOption>
				<colorOption name="Data color" id="dataColor"
					label="Data color" format="HexString" defaultR="0" defaultG="0"
					defaultB="255" defaultAlpha="255">
					The color of the data on the plot if
					there are no colors provided with the table
					(i.e. from the "Color
					Manager" node) or if "Override colors" has been chosen. This
					color
					will not be automatically applied if the data has "Default" colors,
					it will only
					be automatically applied if in the absence of ANY
					colors. You can always apply this
					color to the data by selecting the
					"Override colors" option.
				</colorOption>
				<colorOption name="Background color"
					id="backgroundColor" label="Background color" format="HexString"
					defaultR="255" defaultG="255" defaultB="255" defaultAlpha="255">
					The
					background color of the plot, including the axes labels, the title
					and the subtitle.
				</colorOption>
				<colorOption name="Data area color" id="daColor"
					label="Data area color" format="HexString" defaultR="255"
					defaultG="255" defaultB="255" defaultAlpha="255">
					The background color of
					the data area, within the axes.
				</colorOption>
				<colorOption name="Grid color" id="gridColor"
					label="Grid color" format="HexString" defaultR="0" defaultG="0"
					defaultB="0" defaultAlpha="255">
					The background color of the grid and axis
					base lines.
				</colorOption>
				<checkBoxOption name="Use WebGL graphic library"
					id="enableGL" label="Use WebGL graphic library"
					defaultValue="false">
					This option enables the use of an additional WebGL
					library when rendering the plot.
					This can improve performance with
					larger dataset. It can also lead to unexpected behavior
					with some plots, data, operating systems and browsers. This behavior
					can range from styles not
					being applied properly to the view not
					showing up at all. Enable this option with CAUTION.
				</checkBoxOption>
			</options>
		</tab>
		<tab name="Control Options">
			<description>
				Use these options to configure the available controls
				within the view.
			</description>
			<options>
				<checkBoxOption name="Enable view controls"
					id="enableViewControls" label="Enable view controls"
					defaultValue="true">
					Check to enable controls in the chart.
				</checkBoxOption>
				<checkBoxOption name="Show fullscreen button"
					id="showFullscreen" label="Show fullscreen button"
					defaultValue="true" saveInView="true"
					enableDependency="enableViewControls" enableValue="true">
					When checked,
					a
					fullscreen option is displayed in the KNIME interactive menu.
				</checkBoxOption>
				<checkBoxOption name="Enable tooltip toggle"
					id="tooltipToggle" label="Enable tooltip toggle"
					defaultValue="true" enableDependency="enableViewControls"
					enableValue="true">
					Check to enable toggling of the tooltip within the
					view.
				</checkBoxOption>
				<checkBoxOption
					name="Enable feature selection controls"
					id="enableFeatureSelection"
					label="Enable feature selection controls" defaultValue="true"
					enableDependency="enableViewControls" enableValue="true">
					Check to enable
					column editing in the view.
				</checkBoxOption>
				<checkBoxOption name="Enable text editing"
					id="enableEditing" label="Enable text editing" defaultValue="false"
					enableDependency="enableViewControls" enableValue="true">
					Check to enable
					the editing of the title and axis labels within the view.
				</checkBoxOption>
				<checkBoxOption
					name="Enable 'Show only selected' toggle"
					id="showSelectedOnlyToggle"
					label="Enable 'Show only selected' toggle" defaultValue="true"
					enableDependency="enableViewControls" enableValue="true">
					Check to enable
					toggling of selection-only within view.
				</checkBoxOption>
				<checkBoxOption
					name="Enable publish selection toggle" id="publishSelectionToggle"
					label="Enable publish selection toggle" defaultValue="true"
					enableDependency="enableViewControls" enableValue="true">
					Check to enable
					toggling of selection publishing within view.
				</checkBoxOption>
				<checkBoxOption
					name="Enable subscribe to selection toggle"
					id="subscribeSelectionToggle"
					label="Enable subscribe to selection toggle" defaultValue="true"
					enableDependency="enableViewControls" enableValue="true">
					Check to enable
					toggling of selection subscription within view.
				</checkBoxOption>
				<checkBoxOption
					name="Enable subscribe to filter toggle" id="subscribeFilterToggle"
					label="Enable subscribe to filter toggle" defaultValue="true"
					enableDependency="enableViewControls" enableValue="true">
					Check to enable
					toggling of filter subscription within view.
				</checkBoxOption>
				<checkBoxOption name="Enable link to Plotly editor"
					id="enablePlotlyEditor" label="Enable link to Plotly editor"
					defaultValue="false" enableDependency="enableViewControls"
					enableValue="true">
					Check to enable toggling of filter subscription within
					view.
				</checkBoxOption>
			</options>
		</tab>
		<tab name="Interactivity">
			<description>
				This KNIME implementation of Plotly is compatible with
				the other
				interactive JavaScript views
				in the KNIME analytics
				platform. Use these options to control the
				degree to which this chart
				interacts with other views.
			</description>
			<options>
				<checkBoxOption name="Enable selection"
					id="enableSelection" label="Enable selection" defaultValue="true">
					If checked a separate column containing checkboxes is rendered in
					the
					view.
				</checkBoxOption>
				<checkBoxOption name="Display clear selection button"
					id="showClearSelectionButton"
					label="Display clear selection button" defaultValue="true"
					enableDependency="enableSelection">
					Displays a button to clear
					current selection.
				</checkBoxOption>
				<checkBoxOption name="Subscribe to selection events"
					id="subscribeToSelection" label="Subscribe to selection events"
					defaultValue="true" enableDependency="enableSelection"
					enableValue="true" saveInView="true">
					If checked, the view reacts on
					notifications from other interactive
					views that the selection has
					been changed. See also "Publish selection events".
				</checkBoxOption>
				<checkBoxOption name="Publish selection events"
					id="publishSelection" label="Publish selection events"
					defaultValue="true" enableDependency="enableSelection"
					enableValue="true" saveInView="true">
					If checked, notifies other
					interactive views when user changes the
					selection in the current
					view.
					See also "Subscribe to selection events".
				</checkBoxOption>
				<checkBoxOption name="Subscribe to filter events"
					id="subscribeToFilters" label="Subscribe to filter events"
					defaultValue="true" saveInView="true">
					If checked, the view reacts on
					notifications from other interactive
					views that a filter has
					been
					created or modified.
				</checkBoxOption>
			</options>
		</tab>
	</fullDescription>
	<outputOptions>
		<dataOutputOption outPortIndex="1" id="selection"
			additionalColumnName="Radar Plot Selection"
			additionalColumnType="BOOLEAN" inPortIndex="0" />
	</outputOptions>
	<interactiveView name="Radar Plot">
		The KNIME Radar Plot with Plotly.
	</interactiveView>
	<ports>
		<inPort portType="Data" name="Display data" index="0">
			Data table to
			display in an interactive
			Radar Plot.
		</inPort>
		<outPort portType="Image" name="Radar chart image" index="0">
			SVG
			image of the Radar chart if that option has been enabled.
		</outPort>
		<outPort portType="Data" name="Input Data + View Selection"
			index="1">
			Data table containing the input data with an appended boolean
			column representing which rows were selected in the view.
		</outPort>
	</ports>
	<js:resources>
		<js:resource type="js"
			path="../kpi/knimePlotlyInterface.js" />
		<js:resource type="js" path="radar.js" />
		<js:resource type="css" path="radar.css" />
	</js:resources>
	<js:dependencies>
		<js:dependency name="Plotly" path="plotly.js-1.47.4"
			type="local" exports="Plotly" />
		<js:dependency name="MultipleSelections"
			path="MultipleSelections" type="local" exports="MultipleSelections" />
	</js:dependencies>
	<js:javaProcessor
		className="org.knime.js.plotly.radarlimit.RadarLimit"
		hidesLimitRowOption="true" />
</js:knimeNode>