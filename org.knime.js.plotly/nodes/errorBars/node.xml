<?xml version="1.0" encoding="utf-8"?>
<js:knimeNode
	xmlns:js="http://knime.org/dynamicjsnode/v3.0"
	xmlns="http://knime.org/dynamicnode/v3.0"
	xmlns:n="http://knime.org/node/v2.12"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://knime.org/dynamicjsnode/v3.0 http://www.knime.org/node/dynamicJSNode_v3.0.xsd"
	jsNamespace="knimeErrorBarsPlot" nodeID="plotly_error_bars_plot"
	categoryPath="/labs/js-views/plotly" icon="../js.png" type="Visualizer">
	<name>Error Bars Plot (Plotly)</name>
	<shortDescription>Error bars plot based on the Plotly.js library.</shortDescription>
	<fullDescription>
		<intro>
			<n:p>
				Error bars plot based on the Plotly.js library. This view
				renders each
				column or group as a line and displays the chosen
				measure as a +/-
				error bar at the data points.
				Various measurement and
				grouping options can provide insight into different
				aspects of the
				data set.
			</n:p>
			<n:p>
				The node supports custom CSS styling.
				You can simply put CSS
				rules
				into a single string and set it as a flow
				variable 'customCSS'
				in the
				node configuration dialog.
				Current KNIME classes are NOT YET
				supported, so class names will have to be
				deduced from the view
				itself. We are hoping to support standard
				KNIME
				classes in an upcoming
				release.
			</n:p>
			<n:p>
				Please note: the Plotly.js KNIME extension is currently in Labs. It
				is recommended that you handle missing values and normalize your
				data before using
				visualization nodes in this extension to improve
				performance.
				Please feel free to leave feedback and suggestions on
				our community
				forum
				<n:a href="https://forum.knime.com/">here</n:a>
				.
			</n:p>
		</intro>
		<tab name="Options">
			<description>
				General options for the KNIME Error Bars Plot with
				Plotly. The columns will
				be available for selection
				within the view.
			</description>
			<options>
				<columnSelectorOption name="X-Axis column"
					id="xAxisColumn" inPortIndex="0" label="X-Axis column"
					allowRowID="true"
					filterClasses="org.knime.core.data.IntValue org.knime.core.data.LongValue org.knime.core.data.DoubleValue
					org.knime.core.data.NominalValue org.knime.core.data.date.DateAndTimeValue org.knime.core.data.StringValue"
					saveInView="true">
					Select the column to be initially displayed along the
					X-Axis.
				</columnSelectorOption>
				<columnFilterOption name="Included columns"
					id="columns" inPortIndex="0" label="Included columns"
					filterClasses="org.knime.core.data.IntValue org.knime.core.data.LongValue org.knime.core.data.DoubleValue"
					saveInView="true">
					Select the columns to be plotted as lines or line
					segments.
				</columnFilterOption>
				<radioButtonOption name="Error Bar calculation"
					id="calcMethod"
					possibleValues="Standard&#160;Deviation Percent Fixed&#160;Value Data&#160;Column"
					label="Error Bar calculation"
					defaultValue="Standard&#160;Deviation" saveInView="true">
					The error bar calculation method.

					Standard Deviation is calculated
					using
					<n:a href="https://en.wikipedia.org/wiki/Bessel%27s_correction">Bessel's correction</n:a>
					to yield the correct sample standard deviation.
				</radioButtonOption>
				<doubleOption name="Calculation multiplier"
					id="calcMultiplier" label="Calculation multiplier"
					defaultValue=".5" minValue="0" stepSize=".25"
					enableDependency="calcMethod"
					enableValue="Standard&#160;Deviation Data&#160;Column">
					The
					scale of
					the calculated values. For example,
					selecting a value of
					.5 and
					choosing 'Standard Deviation' as the
					calculation
					method will
					display
					an error bar at each point instance
					+/- .5 * Standard
					Deviation.
				</doubleOption>
				<integerOption name="Percent" id="calcPercent"
					label="Percent" defaultValue="5" minValue="0" maxValue="100"
					stepSize="1" enableDependency="calcMethod" enableValue="Percent">
					Enabled if
					the Error Bar Calculation method is set to 'Percent',
					this value
					will be used to calculate the error at each point based
					on
					the
					percent of the 'y' value for each point along the line. For
					example, if this value is set to 5, the error bars at point (0, 1)
					will be
					at (0,1.05) and (0,.95) which is +/- 5%.
				</integerOption>
				<doubleOption name="Fixed value" id="fixedValue"
					label="Fixed value" defaultValue=".5" minValue="0" stepSize=".25"
					enableDependency="calcMethod" enableValue="Fixed&#160;Value">
					Enabled if the Error Bar
					Calculation
					method is set to
					'Fixed Value', this value will be the
					real number
					displayed for each
					error bar, +/- the
					actual data point
					'y' value. For example, if this
					value is .5, a point at
					(0,1) will
					have error bar end-points at
					(0,.5) and (0,1.5).
				</doubleOption>
				<columnSelectorOption name="Data Column"
					id="errorColumn" inPortIndex="0" label="Data Column"
					filterClasses="org.knime.core.data.IntValue org.knime.core.data.LongValue org.knime.core.data.DoubleValue"
					saveInView="true" enableDependency="calcMethod"
					enableValue="Data&#160;Column">
					Enabled if the Error Bar Calculation
					method is set to
					'Data Column', this column will be mapped 1:1 against each data
					point in the lines displayed
					and the value used as the +/- value
					(and size) of the error bar.
				</columnSelectorOption>
				<checkBoxOption name="Report on missing values"
					id="reportMissing" label="Report on missing values"
					defaultValue="true">
					When enabled this will display a warning whenever there is a missing
					value
					present in the data and give a count on how many missing values
					exist in the data.
				</checkBoxOption>
				<radioButtonOption
					name="Missing values 
					handling" id="mValues"
					possibleValues="Skip&#160;rows&#160;with&#160;missing&#160;values 
					Leave&#160;missing&#160;values"
					label="Missing values"
					defaultValue="Leave&#160;missing&#160;values" saveInView="true">The way in
					which this view tries to compensate for missing or invalid values.
					"Skip rows with missing values" will omit the entire row if a
					single cell is missing. This can
					affect multiple traces on the chart in some circumstances. "Leave
					missing" will leave a gap where
					the missing value exists and draw the chart anyways.
				</radioButtonOption>
			</options>
		</tab>
		<tab name="General Plot Options">
			<description>
				These options control the initial state of the view.
			</description>
			<options>
				<stringOption name="Title" id="title" label="Title"
					defaultValue="Error Bars" optional="true" saveInView="true">
					The chart
					title.
				</stringOption>
				<stringOption name="X-Axis label" id="xAxisLabel"
					label="X-Axis label" optional="true" saveInView="true">
					The label for the
					X-Axis. If left blank, the current X-Axis feature name will be
					used.
				</stringOption>
				<stringOption name="Y-Axis label" id="yAxisLabel"
					label="Y-Axis label" optional="true" saveInView="true">
					The label for the
					Y-Axis. If left blank, the current Y-Axis feature name will be
					used.
				</stringOption>
				<svgOption name="Image" id="svg" portIndex="0"
					label="Image" additionalWait="500" defaultWidth="800"
					defaultHeight="600" defaultFullscreen="true">
					Settings for SVG image
					generation.
				</svgOption>
				<checkBoxOption name="Display legend" id="showLegend"
					label="Display legend" defaultValue="false" saveInView="true">
					When
					checked,
					the chart's legend is displayed.
				</checkBoxOption>
				<checkBoxOption name="Show grid" id="showGrid"
					label="Show grid" defaultValue="true" saveInView="true">
					When checked,
					a
					grid is displayed on the chart.
				</checkBoxOption>
				<checkBoxOption name="Show warnings in view" id="showWarnings" 
					label="Show warnings in view" 
					defaultValue="true" saveInView="true">
					When checked, the 
					any warnings will be displayed in the view. 
				</checkBoxOption>
				<checkBoxOption name="Override colors"
					id="overrideColors" label="Override colors" defaultValue="false">
					When
					checked, the colors provided by the data table will be
					ignored and
					the color chosen below for "Data color" will be
					applied to the plot. If there are no colors provided with the
					data, the
					node will use the "Data color" by default, even if
					this option has
					not been selected.
				</checkBoxOption>
				<colorOption name="Data color" id="dataColor"
					label="Data color" format="HexString" defaultR="0" defaultG="0"
					defaultB="255" defaultAlpha="255">
					The color of the data on the plot if
					there are no colors provided with the table
					(i.e. from the "Color
					Manager" node) or if "Override colors" has been chosen. This
					color
					will not be automatically applied if the data has "Default" colors,
					it will only
					be automatically applied if in the absence of ANY
					colors. You can always apply this
					color to the data by selecting the
					"Override colors" option.
				</colorOption>
				<colorOption name="Background color"
					id="backgroundColor" label="Background color" format="HexString"
					defaultR="255" defaultG="255" defaultB="255" defaultAlpha="255">
					The
					background color of the plot, including the axes labels, the title
					and the subtitle.
				</colorOption>
				<colorOption name="Data area color" id="daColor"
					label="Data area color" format="HexString" defaultR="255"
					defaultG="255" defaultB="255" defaultAlpha="255">
					The background color of
					the data area, within the axes.
				</colorOption>
				<colorOption name="Grid color" id="gridColor"
					label="Grid color" format="HexString" defaultR="0" defaultG="0"
					defaultB="0" defaultAlpha="255">
					The background color of the grid and axis
					base lines.
				</colorOption>
				<checkBoxOption name="Use WebGL graphic library"
					id="enableGL" label="Use WebGL graphic library"
					defaultValue="true">
					Enabling this option uses WebGL (instead of traditional SVG rendering) in the compatible browsers to
					improve performance. It is recommended that you leave this option enabled. However, enabling this option
					will disable any custom CSS provided to the node. If your browser does not support WebGL, the view will
					use traditional SVG rendering as a fallback. NOTE: If "Generate image" is enabled, this process will use SVG
					while creating the image, but WebGL for the interactive view. In this case, CSS Styles may be applied
					to the image, but not the Interactive View.
				</checkBoxOption>
			</options>
		</tab>
		<tab name="Control Options">
			<description>
				Use these options to configure the available controls
				within the view.
			</description>
			<options>
				<checkBoxOption name="Enable view controls"
					id="enableViewControls" label="Enable view controls"
					defaultValue="true">
					Check to enable controls in the chart.
				</checkBoxOption>
				<checkBoxOption name="Show fullscreen button"
					id="showFullscreen" label="Show fullscreen button"
					defaultValue="true" saveInView="true"
					enableDependency="enableViewControls" enableValue="true">
					When checked,
					a
					fullscreen option is displayed in the KNIME interactive menu.
				</checkBoxOption>
				<checkBoxOption name="Enable tooltip toggle"
					id="tooltipToggle" label="Enable tooltip toggle"
					defaultValue="true" enableDependency="enableViewControls"
					enableValue="true">
					Check to enable toggling of the tooltip within the
					view.
				</checkBoxOption>
				<checkBoxOption
					name="Enable calculation method selection controls"
					id="enableCalcMethodSelection"
					label="Enable calculation method selection controls"
					defaultValue="true" enableDependency="enableViewControls"
					enableValue="true">
					Check to enable
					drop down menu's allowing you to switch
					the error bar calculation method
					in the view.
				</checkBoxOption>
				<checkBoxOption
					name="Enable feature selection controls"
					id="enableFeatureSelection"
					label="Enable feature selection controls" defaultValue="true"
					enableDependency="enableViewControls" enableValue="true">
					Check to enable
					drop down menu's allowing you to switch the features displayed on
					the axes.
				</checkBoxOption>
				<checkBoxOption name="Enable text editing"
					id="enableEditing" label="Enable text editing" defaultValue="false"
					enableDependency="enableViewControls" enableValue="true">
					Check to enable
					the editing of the title and axis labels within the view.
				</checkBoxOption>
				<checkBoxOption
					name="Enable 'Show only selected' toggle"
					id="showSelectedOnlyToggle"
					label="Enable 'Show only selected' toggle" defaultValue="true"
					enableDependency="enableViewControls" enableValue="true">
					Check to enable
					toggling of selection-only within view.
				</checkBoxOption>
				<checkBoxOption
					name="Enable publish selection toggle" id="publishSelectionToggle"
					label="Enable publish selection toggle" defaultValue="true"
					enableDependency="enableViewControls" enableValue="true">
					Check to enable
					toggling of selection publishing within view.
				</checkBoxOption>
				<checkBoxOption
					name="Enable subscribe to selection toggle"
					id="subscribeSelectionToggle"
					label="Enable subscribe to selection toggle" defaultValue="true"
					enableDependency="enableViewControls" enableValue="true">
					Check to enable
					toggling of selection subscription within view.
				</checkBoxOption>
				<checkBoxOption
					name="Enable subscribe to filter toggle" id="subscribeFilterToggle"
					label="Enable subscribe to filter toggle" defaultValue="true"
					enableDependency="enableViewControls" enableValue="true">
					Check to enable
					toggling of filter subscription within view.
				</checkBoxOption>
				<checkBoxOption name="Enable link to Plotly editor"
					id="enablePlotlyEditor" label="Enable link to Plotly editor"
					defaultValue="false" enableDependency="enableViewControls"
					enableValue="true">
					Check to enable toggling of filter subscription within
					view.
				</checkBoxOption>
			</options>
		</tab>
		<tab name="Interactivity">
			<description>
				This KNIME implementation of Plotly is compatible with
				the other
				interactive JavaScript views
				in the KNIME analytics
				platform. Use these options to control the
				degree to which this chart
				interacts with other views.
			</description>
			<options>
				<checkBoxOption name="Enable selection"
					id="enableSelection" label="Enable selection" defaultValue="true">
					If checked selection controls will be available for this view. This does
					not disable the view from subscribing to selection events which are published
					by other views in a combination or composite view.
				</checkBoxOption>
				<checkBoxOption name="Display clear selection button"
					id="showClearSelectionButton"
					label="Display clear selection button" 
					defaultValue="true">
					Displays a button to clear current selection if selection is enabled, you are
					subscribed to selection or "Enable subscribe to selection toggle" is enabled in the Control Options.
				</checkBoxOption>
				<checkBoxOption name="Publish selection events"
					id="publishSelection" label="Publish selection events"
					defaultValue="true"
					enableDependency="enableSelection" enableValue="true"
					saveInView="true">
					If checked, notifies other interactive views when user changes the
					selection in the current view.
					See also "Subscribe to selection events".
				</checkBoxOption>
				<checkBoxOption name="Subscribe to selection events"
					id="subscribeToSelection" label="Subscribe to selection events"
					defaultValue="true"
					saveInView="true">
					If checked, the view reacts on notifications from other interactive
					views that the selection has
					been changed. See also "Publish selection events".
				</checkBoxOption>
				<checkBoxOption name="Subscribe to filter events"
					id="subscribeToFilters" label="Subscribe to filter events"
					defaultValue="true" saveInView="true">
					If checked, the view reacts on notifications from other interactive
					views that a filter has
					been created or modified.
				</checkBoxOption>
			</options>
		</tab>
	</fullDescription>
	<outputOptions>
		<dataOutputOption 
			outputType="APPEND_SELECTION_COLUMN" outPortIndex="1" id="selection"
			additionalColumnName="Error Bars Selection"
			additionalColumnType="BOOLEAN" inPortIndex="0" />
	</outputOptions>
	<interactiveView name="Error Bars Plot">
		The KNIME Error Bars Plot with
		Plotly.
	</interactiveView>
	<ports>
		<inPort portType="Data" name="Display data" index="0">
			Data table to
			display in an interactive
			Error Bars Plot.
		</inPort>
		<outPort portType="Image" name="Error Bars image" index="0">
			SVG
			image of the Error Bars chart if that option has been enabled.
		</outPort>
		<outPort portType="Data" name="Input Data + View Selection"
			index="1">
			Data table containing the input data with an appended boolean
			column representing which rows were selected in the view.
		</outPort>
	</ports>
	<js:resources>
		<js:resource type="js"
			path="../kpi/knimePlotlyInterface.js" />
		<js:resource type="js" path="errorBars.js" />
		<js:resource type="css" path="errorBars.css" />
	</js:resources>
	<js:dependencies>
		<js:dependency name="Moment"
			path="moment_timezone_locales_2_17" type="local" exports="moment" />
		<js:dependency name="Plotly" path="plotly.js-1.47.4"
			type="local" exports="Plotly" />
		<js:dependency name="MultipleSelections"
			path="MultipleSelections" type="local" exports="MultipleSelections" />
	</js:dependencies>
	<js:javaProcessor
		className="org.knime.js.plotly.configcheck.ConfigCheck"
		hidesLimitRowOption="false" />
</js:knimeNode>